(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{65:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return l})),a.d(t,"metadata",(function(){return c})),a.d(t,"rightToc",(function(){return i})),a.d(t,"default",(function(){return j}));var n=a(2),b=a(6),r=(a(0),a(73)),l={id:"classDoc",title:"Class Documentation",sidebar_label:"Class Documentation"},c={unversionedId:"classDoc",id:"classDoc",isDocsHomePage:!1,title:"Class Documentation",description:"Summary",source:"@site/docs/classDoc.md",permalink:"/kafka-streams/docs/classDoc",editUrl:"https://github.com/nodefluent/kafka-streams/tree/master/website/docs/classDoc.md",sidebar_label:"Class Documentation",sidebar:"someSidebar",previous:{title:"SSL, SASL and Kerberos Support",permalink:"/kafka-streams/docs/sslSasl"}},i=[{value:"Summary",id:"summary",children:[]},{value:"KeyCount",id:"keycount",children:[]},{value:"LastState",id:"laststate",children:[]},{value:"Max",id:"max",children:[]},{value:"Min",id:"min",children:[]},{value:"Sum",id:"sum",children:[]},{value:"Window",id:"window",children:[]},{value:"JSKafkaClient",id:"jskafkaclient",children:[{value:"new JSKafkaClient(topic, config)",id:"new-jskafkaclienttopic-config",children:[]},{value:"jsKafkaClient.setProduceHandler(handler)",id:"jskafkaclientsetproducehandlerhandler",children:[]},{value:"jsKafkaClient.getProduceHandler() \u21d2 <code>null</code> | <code>EventEmitter</code>",id:"jskafkaclientgetproducehandler-\u21d2-null--eventemitter",children:[]},{value:"jsKafkaClient.overwriteTopics(topics)",id:"jskafkaclientoverwritetopicstopics",children:[]},{value:"jsKafkaClient.start(readyCallback, kafkaErrorCallback, withProducer, withBackPressure)",id:"jskafkaclientstartreadycallback-kafkaerrorcallback-withproducer-withbackpressure",children:[]},{value:"jsKafkaClient.setupProducer(produceTopic, partitions, readyCallback, kafkaErrorCallback, outputKafkaConfig)",id:"jskafkaclientsetupproducerproducetopic-partitions-readycallback-kafkaerrorcallback-outputkafkaconfig",children:[]},{value:"jsKafkaClient.send(topic, message) \u21d2 <code>*</code>",id:"jskafkaclientsendtopic-message-\u21d2-",children:[]},{value:"jsKafkaClient.buffer(topic, identifier, payload, compressionType) \u21d2 <code>*</code>",id:"jskafkaclientbuffertopic-identifier-payload-compressiontype-\u21d2-",children:[]},{value:"jsKafkaClient.bufferFormat(topic, identifier, payload, version, compressionType) \u21d2 <code>*</code>",id:"jskafkaclientbufferformattopic-identifier-payload-version-compressiontype-\u21d2-",children:[]}]},{value:"NativeKafkaClient",id:"nativekafkaclient",children:[{value:"new NativeKafkaClient(topic, config, batchOptions)",id:"new-nativekafkaclienttopic-config-batchoptions",children:[]},{value:"nativeKafkaClient.setProduceHandler(handler)",id:"nativekafkaclientsetproducehandlerhandler",children:[]},{value:"nativeKafkaClient.getProduceHandler() \u21d2 <code>null</code> | <code>EventEmitter</code>",id:"nativekafkaclientgetproducehandler-\u21d2-null--eventemitter",children:[]},{value:"nativeKafkaClient.overwriteTopics(topics)",id:"nativekafkaclientoverwritetopicstopics",children:[]},{value:"nativeKafkaClient.start(readyCallback, kafkaErrorCallback, withProducer, withBackPressure)",id:"nativekafkaclientstartreadycallback-kafkaerrorcallback-withproducer-withbackpressure",children:[]},{value:"nativeKafkaClient.setupProducer(produceTopic, partitions, readyCallback, kafkaErrorCallback, outputKafkaConfig)",id:"nativekafkaclientsetupproducerproducetopic-partitions-readycallback-kafkaerrorcallback-outputkafkaconfig",children:[]},{value:"nativeKafkaClient.send(topicName, message, partition, key, partitionKey, opaqueKey) \u21d2 <code>Promise.&amp;lt;void&amp;gt;</code>",id:"nativekafkaclientsendtopicname-message-partition-key-partitionkey-opaquekey-\u21d2-promiseltvoidgt",children:[]},{value:"nativeKafkaClient.buffer(topic, identifier, payload, _, partition, version, partitionKey) \u21d2 <code>Promise.&amp;lt;void&amp;gt;</code>",id:"nativekafkaclientbuffertopic-identifier-payload-_-partition-version-partitionkey-\u21d2-promiseltvoidgt",children:[]},{value:"nativeKafkaClient.bufferFormat(topic, identifier, payload, version, _, partitionKey, partition) \u21d2 <code>Promise.&amp;lt;void&amp;gt;</code>",id:"nativekafkaclientbufferformattopic-identifier-payload-version-_-partitionkey-partition-\u21d2-promiseltvoidgt",children:[]}]},{value:"KStream",id:"kstream",children:[{value:"new KStream(topicName, storage, kafka, isClone)",id:"new-kstreamtopicname-storage-kafka-isclone",children:[]},{value:"kStream.start(kafkaReadyCallback, kafkaErrorCallback, withBackPressure, outputKafkaConfig)",id:"kstreamstartkafkareadycallback-kafkaerrorcallback-withbackpressure-outputkafkaconfig",children:[]},{value:"kStream.innerJoin(stream, key, windowed, combine) \u21d2 KStream",id:"kstreaminnerjoinstream-key-windowed-combine-\u21d2-kstream",children:[]},{value:"kStream.outerJoin(stream)",id:"kstreamouterjoinstream",children:[]},{value:"kStream.leftJoin(stream)",id:"kstreamleftjoinstream",children:[]},{value:"kStream.merge(stream) \u21d2 KStream",id:"kstreammergestream-\u21d2-kstream",children:[]},{value:"kStream.fromMost() \u21d2 KStream",id:"kstreamfrommost-\u21d2-kstream",children:[]},{value:"kStream.clone(cloneEvents, cloneDeep) \u21d2 KStream",id:"kstreamclonecloneevents-clonedeep-\u21d2-kstream",children:[]},{value:"kStream.branch(preds) \u21d2 Array.&lt;KStream&gt;",id:"kstreambranchpreds-\u21d2-arrayltkstreamgt",children:[]}]},{value:"(message) =&gt; true ]",id:"message--true-",children:[{value:"kStream.window(from, to, etl, encapsulated, collect) \u21d2 <code>Object</code>",id:"kstreamwindowfrom-to-etl-encapsulated-collect-\u21d2-object",children:[]},{value:"kStream.close() \u21d2 <code>Promise.&amp;lt;boolean&amp;gt;</code>",id:"kstreamclose-\u21d2-promiseltbooleangt",children:[]}]},{value:"KTable",id:"ktable",children:[{value:"new KTable(topicName, keyMapETL, storage, kafka, isClone)",id:"new-ktabletopicname-keymapetl-storage-kafka-isclone",children:[]},{value:"kTable.start(kafkaReadyCallback, kafkaErrorCallback, withBackPressure, outputKafkaConfig)",id:"ktablestartkafkareadycallback-kafkaerrorcallback-withbackpressure-outputkafkaconfig",children:[]},{value:"kTable.innerJoin(stream, key)",id:"ktableinnerjoinstream-key",children:[]},{value:"kTable.outerJoin(stream)",id:"ktableouterjoinstream",children:[]},{value:"kTable.leftJoin(stream)",id:"ktableleftjoinstream",children:[]},{value:"kTable.writeToTableStream(message)",id:"ktablewritetotablestreammessage",children:[]},{value:"kTable.consumeUntilMs(ms, finishedCallback) \u21d2 KTable",id:"ktableconsumeuntilmsms-finishedcallback-\u21d2-ktable",children:[]},{value:"kTable.consumeUntilCount(count, finishedCallback) \u21d2 KTable",id:"ktableconsumeuntilcountcount-finishedcallback-\u21d2-ktable",children:[]},{value:"kTable.consumeUntilLatestOffset(finishedCallback)",id:"ktableconsumeuntillatestoffsetfinishedcallback",children:[]},{value:"kTable.getTable() \u21d2 <code>Promise.&amp;lt;object&amp;gt;</code>",id:"ktablegettable-\u21d2-promiseltobjectgt",children:[]},{value:"kTable.replay()",id:"ktablereplay",children:[]},{value:"kTable.merge(stream) \u21d2 Promise.&lt;KTable&gt;",id:"ktablemergestream-\u21d2-promiseltktablegt",children:[]},{value:"kTable.clone() \u21d2 Promise.&lt;KTable&gt;",id:"ktableclone-\u21d2-promiseltktablegt",children:[]},{value:"kTable.close() \u21d2 <code>Promise.&amp;lt;boolean&amp;gt;</code>",id:"ktableclose-\u21d2-promiseltbooleangt",children:[]}]},{value:"StreamDSL",id:"streamdsl",children:[{value:"new StreamDSL(topicName, storage, kafka, isClone)",id:"new-streamdsltopicname-storage-kafka-isclone",children:[]},{value:"streamDSL.start()",id:"streamdslstart",children:[]},{value:"streamDSL.getStats() \u21d2 <code>object</code>",id:"streamdslgetstats-\u21d2-object",children:[]},{value:"streamDSL.getStorage() \u21d2 <code>KStorage</code>",id:"streamdslgetstorage-\u21d2-kstorage",children:[]},{value:"streamDSL.writeToStream(message)",id:"streamdslwritetostreammessage",children:[]},{value:"streamDSL.getMost() \u21d2 <code>Object</code>",id:"streamdslgetmost-\u21d2-object",children:[]},{value:"streamDSL.getNewMostFrom(array) \u21d2 <code>Stream.&amp;lt;any&amp;gt;</code>",id:"streamdslgetnewmostfromarray-\u21d2-streamltanygt",children:[]},{value:"streamDSL.replaceInternalObservable(newStream$)",id:"streamdslreplaceinternalobservablenewstream",children:[]},{value:"streamDSL.setProduceHandler(handler)",id:"streamdslsetproducehandlerhandler",children:[]},{value:"streamDSL.createAndSetProduceHandler() \u21d2 <code>module:events.internal</code>",id:"streamdslcreateandsetproducehandler-\u21d2-moduleeventsinternal",children:[]},{value:"streamDSL.setKafkaStreamsReference(reference)",id:"streamdslsetkafkastreamsreferencereference",children:[]},{value:"streamDSL.from(topicName) \u21d2 StreamDSL",id:"streamdslfromtopicname-\u21d2-streamdsl",children:[]},{value:"streamDSL.awaitPromises(etl) \u21d2 StreamDSL",id:"streamdslawaitpromisesetl-\u21d2-streamdsl",children:[]},{value:"streamDSL.map(etl) \u21d2 StreamDSL",id:"streamdslmapetl-\u21d2-streamdsl",children:[]},{value:"streamDSL.asyncMap(etl) \u21d2 StreamDSL",id:"streamdslasyncmapetl-\u21d2-streamdsl",children:[]},{value:"streamDSL.concatMap(etl) \u21d2 StreamDSL",id:"streamdslconcatmapetl-\u21d2-streamdsl",children:[]},{value:"streamDSL.forEach(eff) \u21d2 <code>*</code>",id:"streamdslforeacheff-\u21d2-",children:[]},{value:"streamDSL.chainForEach(eff, callback) \u21d2 StreamDSL",id:"streamdslchainforeacheff-callback-\u21d2-streamdsl",children:[]},{value:"streamDSL.tap(eff)",id:"streamdsltapeff",children:[]},{value:"streamDSL.filter(pred) \u21d2 StreamDSL",id:"streamdslfilterpred-\u21d2-streamdsl",children:[]},{value:"streamDSL.skipRepeats() \u21d2 StreamDSL",id:"streamdslskiprepeats-\u21d2-streamdsl",children:[]},{value:"streamDSL.skipRepeatsWith(equals) \u21d2 StreamDSL",id:"streamdslskiprepeatswithequals-\u21d2-streamdsl",children:[]},{value:"streamDSL.skip(count) \u21d2 StreamDSL",id:"streamdslskipcount-\u21d2-streamdsl",children:[]},{value:"streamDSL.take(count) \u21d2 StreamDSL",id:"streamdsltakecount-\u21d2-streamdsl",children:[]},{value:"streamDSL.mapStringToArray(delimiter) \u21d2 StreamDSL",id:"streamdslmapstringtoarraydelimiter-\u21d2-streamdsl",children:[]},{value:"streamDSL.mapArrayToKV(keyIndex, valueIndex) \u21d2 StreamDSL",id:"streamdslmaparraytokvkeyindex-valueindex-\u21d2-streamdsl",children:[]},{value:"streamDSL.mapStringToKV(delimiter, keyIndex, valueIndex) \u21d2 StreamDSL",id:"streamdslmapstringtokvdelimiter-keyindex-valueindex-\u21d2-streamdsl",children:[]},{value:"streamDSL.mapJSONParse() \u21d2 StreamDSL",id:"streamdslmapjsonparse-\u21d2-streamdsl",children:[]},{value:"streamDSL.mapStringify() \u21d2 StreamDSL",id:"streamdslmapstringify-\u21d2-streamdsl",children:[]},{value:"streamDSL.mapBufferKeyToString() \u21d2 StreamDSL",id:"streamdslmapbufferkeytostring-\u21d2-streamdsl",children:[]},{value:"streamDSL.mapBufferValueToString() \u21d2 StreamDSL",id:"streamdslmapbuffervaluetostring-\u21d2-streamdsl",children:[]},{value:"streamDSL.mapStringValueToJSONObject() \u21d2 StreamDSL",id:"streamdslmapstringvaluetojsonobject-\u21d2-streamdsl",children:[]},{value:"streamDSL.mapJSONConvenience() \u21d2 StreamDSL",id:"streamdslmapjsonconvenience-\u21d2-streamdsl",children:[]},{value:"streamDSL.wrapAsKafkaValue(topic) \u21d2 StreamDSL",id:"streamdslwrapaskafkavaluetopic-\u21d2-streamdsl",children:[]},{value:"streamDSL.mapWrapKafkaValue() \u21d2 StreamDSL",id:"streamdslmapwrapkafkavalue-\u21d2-streamdsl",children:[]},{value:"streamDSL.atThroughput(count, callback) \u21d2 StreamDSL",id:"streamdslatthroughputcount-callback-\u21d2-streamdsl",children:[]},{value:"streamDSL.mapToFormat(type, getId) \u21d2 StreamDSL",id:"streamdslmaptoformattype-getid-\u21d2-streamdsl",children:[]},{value:"streamDSL.mapFromFormat() \u21d2 StreamDSL",id:"streamdslmapfromformat-\u21d2-streamdsl",children:[]},{value:"streamDSL.timestamp(etl) \u21d2 StreamDSL",id:"streamdsltimestampetl-\u21d2-streamdsl",children:[]},{value:"streamDSL.constant(substitute) \u21d2 StreamDSL",id:"streamdslconstantsubstitute-\u21d2-streamdsl",children:[]},{value:"streamDSL.scan(eff, initial) \u21d2 StreamDSL",id:"streamdslscaneff-initial-\u21d2-streamdsl",children:[]},{value:"streamDSL.slice(start, end) \u21d2 StreamDSL",id:"streamdslslicestart-end-\u21d2-streamdsl",children:[]},{value:"streamDSL.takeWhile(pred) \u21d2 StreamDSL",id:"streamdsltakewhilepred-\u21d2-streamdsl",children:[]},{value:"streamDSL.skipWhile(pred) \u21d2 StreamDSL",id:"streamdslskipwhilepred-\u21d2-streamdsl",children:[]},{value:"streamDSL.until(signal$) \u21d2 StreamDSL",id:"streamdsluntilsignal-\u21d2-streamdsl",children:[]},{value:"streamDSL.since(signal$) \u21d2 StreamDSL",id:"streamdslsincesignal-\u21d2-streamdsl",children:[]},{value:"streamDSL.continueWith(f)",id:"streamdslcontinuewithf",children:[]},{value:"streamDSL.reduce(eff, initial) \u21d2 <code>*</code>",id:"streamdslreduceeff-initial-\u21d2-",children:[]},{value:"streamDSL.chainReduce(eff, initial, callback) \u21d2 StreamDSL",id:"streamdslchainreduceeff-initial-callback-\u21d2-streamdsl",children:[]},{value:"streamDSL.drain() \u21d2 <code>*</code>",id:"streamdsldrain-\u21d2-",children:[]},{value:"streamDSL.throttle(throttlePeriod) \u21d2 StreamDSL",id:"streamdslthrottlethrottleperiod-\u21d2-streamdsl",children:[]},{value:"streamDSL.delay(delayTime) \u21d2 StreamDSL",id:"streamdsldelaydelaytime-\u21d2-streamdsl",children:[]},{value:"streamDSL.debounce(debounceTime) \u21d2 StreamDSL",id:"streamdsldebouncedebouncetime-\u21d2-streamdsl",children:[]},{value:"streamDSL.countByKey(key, countFieldName) \u21d2 StreamDSL",id:"streamdslcountbykeykey-countfieldname-\u21d2-streamdsl",children:[]},{value:"streamDSL.sumByKey(key, fieldName, sumField) \u21d2 StreamDSL",id:"streamdslsumbykeykey-fieldname-sumfield-\u21d2-streamdsl",children:[]},{value:"streamDSL.min(fieldName, minField) \u21d2 StreamDSL",id:"streamdslminfieldname-minfield-\u21d2-streamdsl",children:[]},{value:"streamDSL.max(fieldName, maxField) \u21d2 StreamDSL",id:"streamdslmaxfieldname-maxfield-\u21d2-streamdsl",children:[]},{value:"streamDSL._merge(otherStream$)",id:"streamdsl_mergeotherstream",children:[]},{value:"streamDSL._zip(otherStream$, combine)",id:"streamdsl_zipotherstream-combine",children:[]},{value:"streamDSL.to(topic, outputPartitionsCount, produceType, version, compressionType, producerErrorCallback, outputKafkaConfig) \u21d2 <code>Promise.&amp;lt;boolean&amp;gt;</code>",id:"streamdsltotopic-outputpartitionscount-producetype-version-compressiontype-producererrorcallback-outputkafkaconfig-\u21d2-promiseltbooleangt",children:[]}]}],m={rightToc:i};function j(e){var t=e.components,a=Object(b.a)(e,["components"]);return Object(r.b)("wrapper",Object(n.a)({},m,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"summary"},"Summary"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Class"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"#keycount"}),"KeyCount")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"used to count keys in a stream")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"#laststate"}),"LastState")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"used to hold the last state of key values in a stream e.g. building KTables")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"#max"}),"Max")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"used to grab the highest value of key values in a stream")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"#min"}),"Min")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"used grab the lowest value of key values in a stream")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"#sum"}),"Sum")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"used to sum up key values in a stream")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"#window"}),"Window")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"used to build windows of key value states in a stream")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"#jskafkaclient"}),"JSKafkaClient")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"#nativekafkaclient"}),"NativeKafkaClient")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"#kstream"}),"KStream")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"change-log representation of a stream")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"#ktable"}),"KTable")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"table representation of a stream")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"#streamdsl"}),"StreamDSL")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Stream base class")))),Object(r.b)("h2",{id:"keycount"},"KeyCount"),Object(r.b)("p",null,"used to count keys in a stream"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": global class  "),Object(r.b)("h2",{id:"laststate"},"LastState"),Object(r.b)("p",null,"used to hold the last state of key values\nin a stream e.g. building KTables"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": global class  "),Object(r.b)("h2",{id:"max"},"Max"),Object(r.b)("p",null,"used to grab the highest value of key values\nin a stream"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": global class  "),Object(r.b)("h2",{id:"min"},"Min"),Object(r.b)("p",null,"used grab the lowest value of\nkey values in a stream"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": global class  "),Object(r.b)("h2",{id:"sum"},"Sum"),Object(r.b)("p",null,"used to sum up key values in a stream"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": global class  "),Object(r.b)("h2",{id:"window"},"Window"),Object(r.b)("p",null,"used to build windows of key value states\nin a stream"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": global class  "),Object(r.b)("h2",{id:"jskafkaclient"},"JSKafkaClient"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": global class  "),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#jskafkaclient"}),"JSKafkaClient"),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#new_jskafkaclient_new"}),"new JSKafkaClient(topic, config)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#jskafkaclient+setproducehandler"}),".setProduceHandler(handler)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#jskafkaclient+getproducehandler"}),".getProduceHandler()")," \u21d2 ",Object(r.b)("inlineCode",{parentName:"li"},"null")," ","|"," ",Object(r.b)("inlineCode",{parentName:"li"},"EventEmitter")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#jskafkaclient+overwritetopics"}),".overwriteTopics(topics)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#jskafkaclient+start"}),".start(readyCallback, kafkaErrorCallback, withProducer, withBackPressure)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#jskafkaclient+setupproducer"}),".setupProducer(produceTopic, partitions, readyCallback, kafkaErrorCallback, outputKafkaConfig)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#jskafkaclient+send"}),".send(topic, message)")," \u21d2 ",Object(r.b)("inlineCode",{parentName:"li"},"\\*")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#jskafkaclient+buffer"}),".buffer(topic, identifier, payload, compressionType)")," \u21d2 ",Object(r.b)("inlineCode",{parentName:"li"},"\\*")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#jskafkaclient+bufferformat"}),".bufferFormat(topic, identifier, payload, version, compressionType)")," \u21d2 ",Object(r.b)("inlineCode",{parentName:"li"},"\\*"))))),Object(r.b)("h3",{id:"new-jskafkaclienttopic-config"},"new JSKafkaClient(topic, config)"),Object(r.b)("p",null,"KafkaClient (EventEmitter)\nthat wraps an internal instance of a\nSinek kafka- Consumer and/or Producer"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"topic")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"config")))),Object(r.b)("h3",{id:"jskafkaclientsetproducehandlerhandler"},"jsKafkaClient.setProduceHandler(handler)"),Object(r.b)("p",null,"sets a handler for produce messages\n(emits whenever kafka messages are produced/delivered)"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#jskafkaclient"}),Object(r.b)("inlineCode",{parentName:"a"},"JSKafkaClient")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"handler"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"EventEmitter"))))),Object(r.b)("h3",{id:"jskafkaclientgetproducehandler-\u21d2-null--eventemitter"},"jsKafkaClient.getProduceHandler() \u21d2 ",Object(r.b)("inlineCode",{parentName:"h3"},"null")," | ",Object(r.b)("inlineCode",{parentName:"h3"},"EventEmitter")),Object(r.b)("p",null,"returns the produce handler instance if present"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#jskafkaclient"}),Object(r.b)("inlineCode",{parentName:"a"},"JSKafkaClient")),"  "),Object(r.b)("h3",{id:"jskafkaclientoverwritetopicstopics"},"jsKafkaClient.overwriteTopics(topics)"),Object(r.b)("p",null,"overwrites the topic"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#jskafkaclient"}),Object(r.b)("inlineCode",{parentName:"a"},"JSKafkaClient")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"topics"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"Array.&lt;string&gt;"))))),Object(r.b)("h3",{id:"jskafkaclientstartreadycallback-kafkaerrorcallback-withproducer-withbackpressure"},"jsKafkaClient.start(readyCallback, kafkaErrorCallback, withProducer, withBackPressure)"),Object(r.b)("p",null,"starts a new kafka consumer (using sinek's partition drainer)\nwill await a kafka-producer-ready-event if started withProducer=true"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#jskafkaclient"}),Object(r.b)("inlineCode",{parentName:"a"},"JSKafkaClient")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Default"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"readyCallback"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"kafkaErrorCallback"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"withProducer"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"false"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"withBackPressure"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"false"))))),Object(r.b)("h3",{id:"jskafkaclientsetupproducerproducetopic-partitions-readycallback-kafkaerrorcallback-outputkafkaconfig"},"jsKafkaClient.setupProducer(produceTopic, partitions, readyCallback, kafkaErrorCallback, outputKafkaConfig)"),Object(r.b)("p",null,"starts a new kafka-producer using sinek's publisher\nwill fire kafka-producer-ready-event\nrequires a topic's partition count during initialisation"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#jskafkaclient"}),Object(r.b)("inlineCode",{parentName:"a"},"JSKafkaClient")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Default"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"produceTopic"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"partitions"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"1"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"readyCallback"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"kafkaErrorCallback"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"outputKafkaConfig"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}))))),Object(r.b)("h3",{id:"jskafkaclientsendtopic-message-\u21d2-"},"jsKafkaClient.send(topic, message) \u21d2 ",Object(r.b)("inlineCode",{parentName:"h3"},"*")),Object(r.b)("p",null,"simply produces a message or multiple on a topic\nif producerPartitionCount is > 1 it will randomize\nthe target partition for the message/s"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#jskafkaclient"}),Object(r.b)("inlineCode",{parentName:"a"},"JSKafkaClient")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"topic")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"message")))),Object(r.b)("h3",{id:"jskafkaclientbuffertopic-identifier-payload-compressiontype-\u21d2-"},"jsKafkaClient.buffer(topic, identifier, payload, compressionType) \u21d2 ",Object(r.b)("inlineCode",{parentName:"h3"},"*")),Object(r.b)("p",null,"buffers a keyed message to be send\na keyed message needs an identifier, if none is provided\nan uuid.v4() will be generated"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#jskafkaclient"}),Object(r.b)("inlineCode",{parentName:"a"},"JSKafkaClient")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Default"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"topic"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"identifier"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"payload"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"compressionType"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"0"))))),Object(r.b)("h3",{id:"jskafkaclientbufferformattopic-identifier-payload-version-compressiontype-\u21d2-"},"jsKafkaClient.bufferFormat(topic, identifier, payload, version, compressionType) \u21d2 ",Object(r.b)("inlineCode",{parentName:"h3"},"*")),Object(r.b)("p",null,"buffers a keyed message in (a base json format) to be send\na keyed message needs an identifier, if none is provided\nan uuid.4() will be generated"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#jskafkaclient"}),Object(r.b)("inlineCode",{parentName:"a"},"JSKafkaClient")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Default"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"topic"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"identifier"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"payload"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"version"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"1"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"compressionType"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"0"))))),Object(r.b)("h2",{id:"nativekafkaclient"},"NativeKafkaClient"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": global class  "),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#nativekafkaclient"}),"NativeKafkaClient"),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#new_nativekafkaclient_new"}),"new NativeKafkaClient(topic, config, batchOptions)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#nativekafkaclient+setproducehandler"}),".setProduceHandler(handler)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#nativekafkaclient+getproducehandler"}),".getProduceHandler()")," \u21d2 ",Object(r.b)("inlineCode",{parentName:"li"},"null")," ","|"," ",Object(r.b)("inlineCode",{parentName:"li"},"EventEmitter")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#nativekafkaclient+overwritetopics"}),".overwriteTopics(topics)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#nativekafkaclient+start"}),".start(readyCallback, kafkaErrorCallback, withProducer, withBackPressure)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#Nativekafkaclient+setupproducer"}),".setupProducer(produceTopic, partitions, readyCallback, kafkaErrorCallback, outputKafkaConfig)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#nativekafkaclient+send"}),".send(topicName, message, partition, key, partitionKey, opaqueKey)")," \u21d2 ",Object(r.b)("inlineCode",{parentName:"li"},"Promise.&lt;void&gt;")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#nativekafkaclient+buffer"}),".buffer(topic, identifier, payload, _, partition, version, partitionKey)")," \u21d2 ",Object(r.b)("inlineCode",{parentName:"li"},"Promise.&lt;void&gt;")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#nativekafkaclient+bufferformat"}),".bufferFormat(topic, identifier, payload, version, _, partitionKey, partition)")," \u21d2 ",Object(r.b)("inlineCode",{parentName:"li"},"Promise.&lt;void&gt;"))))),Object(r.b)("h3",{id:"new-nativekafkaclienttopic-config-batchoptions"},"new NativeKafkaClient(topic, config, batchOptions)"),Object(r.b)("p",null,"NativeKafkaClient (EventEmitter)\nthat wraps an internal instance of a\nSinek native kafka- Consumer and/or Producer"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"topic"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"config"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"batchOptions"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"optional")))),Object(r.b)("h3",{id:"nativekafkaclientsetproducehandlerhandler"},"nativeKafkaClient.setProduceHandler(handler)"),Object(r.b)("p",null,"sets a handler for produce messages\n(emits whenever kafka messages are produced/delivered)"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#nativekafkaclient"}),Object(r.b)("inlineCode",{parentName:"a"},"NativeKafkaClient")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"handler"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"EventEmitter"))))),Object(r.b)("h3",{id:"nativekafkaclientgetproducehandler-\u21d2-null--eventemitter"},"nativeKafkaClient.getProduceHandler() \u21d2 ",Object(r.b)("inlineCode",{parentName:"h3"},"null")," ","|"," ",Object(r.b)("inlineCode",{parentName:"h3"},"EventEmitter")),Object(r.b)("p",null,"returns the produce handler instance if present"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#nativekafkaclient"}),Object(r.b)("inlineCode",{parentName:"a"},"NativeKafkaClient")),"  "),Object(r.b)("h3",{id:"nativekafkaclientoverwritetopicstopics"},"nativeKafkaClient.overwriteTopics(topics)"),Object(r.b)("p",null,"overwrites the topic"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#nativekafkaclient"}),Object(r.b)("inlineCode",{parentName:"a"},"NativeKafkaClient")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"topics"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"Array.&lt;string&gt;"))))),Object(r.b)("h3",{id:"nativekafkaclientstartreadycallback-kafkaerrorcallback-withproducer-withbackpressure"},"nativeKafkaClient.start(readyCallback, kafkaErrorCallback, withProducer, withBackPressure)"),Object(r.b)("p",null,"starts a new kafka consumer\nwill await a kafka-producer-ready-event if started withProducer=true"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#nativekafkaclient"}),Object(r.b)("inlineCode",{parentName:"a"},"NativeKafkaClient")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Default"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"readyCallback"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"kafkaErrorCallback"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"withProducer"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"false"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"withBackPressure"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"false"))))),Object(r.b)("h3",{id:"nativekafkaclientsetupproducerproducetopic-partitions-readycallback-kafkaerrorcallback-outputkafkaconfig"},"nativeKafkaClient.setupProducer(produceTopic, partitions, readyCallback, kafkaErrorCallback, outputKafkaConfig)"),Object(r.b)("p",null,"starts a new kafka-producer\nwill fire kafka-producer-ready-event\nrequires a topic's partition count during initialisation"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#nativekafkaclient"}),Object(r.b)("inlineCode",{parentName:"a"},"NativeKafkaClient")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Default"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"produceTopic"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"partitions"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"1"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"readyCallback"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"kafkaErrorCallback"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"outputKafkaConfig"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}))))),Object(r.b)("h3",{id:"nativekafkaclientsendtopicname-message-partition-key-partitionkey-opaquekey-\u21d2-promiseltvoidgt"},"nativeKafkaClient.send(topicName, message, partition, key, partitionKey, opaqueKey) \u21d2 ",Object(r.b)("inlineCode",{parentName:"h3"},"Promise.&lt;void&gt;")),Object(r.b)("p",null,"simply produces a message or multiple on a topic\nif producerPartitionCount is > 1 it will randomize\nthe target partition for the message/s"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#nativekafkaclient"}),Object(r.b)("inlineCode",{parentName:"a"},"NativeKafkaClient")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Default"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"topicName"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null})),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"message"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null})),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"partition"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null})),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"optional")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"key"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null})),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"optional")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"partitionKey"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null})),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"optional")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"opaqueKey"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null})),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"optional")))),Object(r.b)("h3",{id:"nativekafkaclientbuffertopic-identifier-payload-_-partition-version-partitionkey-\u21d2-promiseltvoidgt"},"nativeKafkaClient.buffer(topic, identifier, payload, _, partition, version, partitionKey) \u21d2 ",Object(r.b)("inlineCode",{parentName:"h3"},"Promise.&lt;void&gt;")),Object(r.b)("p",null,"buffers a keyed message to be send\na keyed message needs an identifier, if none is provided\nan uuid.v4() will be generated"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#nativekafkaclient"}),Object(r.b)("inlineCode",{parentName:"a"},"NativeKafkaClient")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Default"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"topic"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null})),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"identifier"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null})),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"payload"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null})),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"_"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null})),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"optional")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"partition"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null})),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"optional")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"version"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null})),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"optional")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"partitionKey"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null})),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"optional")))),Object(r.b)("h3",{id:"nativekafkaclientbufferformattopic-identifier-payload-version-_-partitionkey-partition-\u21d2-promiseltvoidgt"},"nativeKafkaClient.bufferFormat(topic, identifier, payload, version, _, partitionKey, partition) \u21d2 ",Object(r.b)("inlineCode",{parentName:"h3"},"Promise.&lt;void&gt;")),Object(r.b)("p",null,"buffers a keyed message in (a base json format) to be send\na keyed message needs an identifier, if none is provided\nan uuid.4() will be generated"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#nativekafkaclient"}),Object(r.b)("inlineCode",{parentName:"a"},"NativeKafkaClient")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Default"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"topic"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null})),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"identifier"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null})),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"payload"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null})),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"version"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"1")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"optional")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"_"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null})),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"optional")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"partitionKey"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null})),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"optional")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"partition"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null})),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"optional")))),Object(r.b)("h2",{id:"kstream"},"KStream"),Object(r.b)("p",null,"change-log representation of a stream"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": global class  "),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#kstream"}),"KStream"),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#new-kstreamtopicname-storage-kafka-isclone"}),"new KStream(topicName, storage, kafka, isClone)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#kstreamstartkafkareadycallback-kafkaerrorcallback-withbackpressure-outputkafkaconfig"}),".start(kafkaReadyCallback, kafkaErrorCallback, withBackPressure, outputKafkaConfig)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#kstream+innerjoin"}),".innerJoin(stream, key, windowed, combine)")," \u21d2 ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#kstreaminnerjoinstream-key-windowed-combine-%E2%87%92-kstream"}),Object(r.b)("inlineCode",{parentName:"a"},"KStream"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#kstreamouterjoinstream"}),".outerJoin(stream)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#kstreamleftjoinstream"}),".leftJoin(stream)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#kstreammergestream-%E2%87%92-kstream"}),".merge(stream)")," \u21d2 ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#kstream"}),Object(r.b)("inlineCode",{parentName:"a"},"KStream"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#kstreamfrommost-%E2%87%92-kstream"}),".fromMost()")," \u21d2 ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#kstream"}),Object(r.b)("inlineCode",{parentName:"a"},"KStream"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#kstreamclonecloneevents-clonedeep-%E2%87%92-kstream"}),".clone(cloneEvents, cloneDeep)")," \u21d2 ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#kstream"}),Object(r.b)("inlineCode",{parentName:"a"},"KStream"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#kstreambranchpreds-%E2%87%92-arrayltkstreamgt"}),".branch(preds)")," \u21d2 ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#kstream"}),Object(r.b)("inlineCode",{parentName:"a"},"Array.&lt;KStream&gt;"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#kstreamwindowfrom-to-etl-encapsulated-collect-%E2%87%92-object"}),".window(from, to, etl, encapsulated, collect)")," \u21d2 ",Object(r.b)("inlineCode",{parentName:"li"},"Object")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#kstreamclose-%E2%87%92-promiseltbooleangt"}),".close()")," \u21d2 ",Object(r.b)("inlineCode",{parentName:"li"},"Promise.&lt;boolean&gt;"))))),Object(r.b)("h3",{id:"new-kstreamtopicname-storage-kafka-isclone"},"new KStream(topicName, storage, kafka, isClone)"),Object(r.b)("p",null,"creates a changelog representation of a stream\njoin operations of kstream instances are synchronous\nand return new instances immediately"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Default"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"topicName"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"string")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"storage"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"KStorage")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"kafka"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"KafkaClient")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"isClone"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"boolean")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"false"))))),Object(r.b)("h3",{id:"kstreamstartkafkareadycallback-kafkaerrorcallback-withbackpressure-outputkafkaconfig"},"kStream.start(kafkaReadyCallback, kafkaErrorCallback, withBackPressure, outputKafkaConfig)"),Object(r.b)("p",null,"start kafka consumption\nprepare production of messages if necessary\nwhen called with zero or just a single callback argument\nthis function will return a promise and use the callback for errors"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#kstream"}),Object(r.b)("inlineCode",{parentName:"a"},"KStream")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Default"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"kafkaReadyCallback"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"function")," ","|"," ",Object(r.b)("inlineCode",{parentName:"td"},"Object")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null})),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"can also be an object (config)")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"kafkaErrorCallback"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"function")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null})),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"withBackPressure"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"boolean")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"false")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"outputKafkaConfig"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"Object")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null})),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}))))),Object(r.b)("h3",{id:"kstreaminnerjoinstream-key-windowed-combine-\u21d2-kstream"},"kStream.innerJoin(stream, key, windowed, combine) \u21d2 ",Object(r.b)("a",Object(n.a)({parentName:"h3"},{href:"#kstream"}),Object(r.b)("inlineCode",{parentName:"a"},"KStream"))),Object(r.b)("p",null,"Emits an output when both input sources have records with the same key.\ns1$:{object} + s2$:{object} -> j$:{left: s1$object, right: s2$object}"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#kstream"}),Object(r.b)("inlineCode",{parentName:"a"},"KStream")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Default"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"stream"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"key"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"string")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"&quot;key&quot;"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"windowed"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"boolean")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"false"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"combine"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"function")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}))))),Object(r.b)("h3",{id:"kstreamouterjoinstream"},"kStream.outerJoin(stream)"),Object(r.b)("p",null,"Emits an output for each record in either input source.\nIf only one source contains a key, the other is null"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#kstream"}),Object(r.b)("inlineCode",{parentName:"a"},"KStream")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"stream"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL")))))),Object(r.b)("h3",{id:"kstreamleftjoinstream"},"kStream.leftJoin(stream)"),Object(r.b)("p",null,"Emits an output for each record in the left or primary input source.\nIf the other source does not have a value for a given key, it is set to null"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#kstream"}),Object(r.b)("inlineCode",{parentName:"a"},"KStream")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"stream"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL")))))),Object(r.b)("h3",{id:"kstreammergestream-\u21d2-kstream"},"kStream.merge(stream) \u21d2 ",Object(r.b)("a",Object(n.a)({parentName:"h3"},{href:"#kstream"}),Object(r.b)("inlineCode",{parentName:"a"},"KStream"))),Object(r.b)("p",null,"Emits an output for each record in any of the streams.\nActs as simple merge of both streams.\ncan be used with KStream or KTable instances\nreturns a NEW KStream instance"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#kstream"}),Object(r.b)("inlineCode",{parentName:"a"},"KStream")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"stream"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL")))))),Object(r.b)("h3",{id:"kstreamfrommost-\u21d2-kstream"},"kStream.fromMost() \u21d2 ",Object(r.b)("a",Object(n.a)({parentName:"h3"},{href:"#kstream"}),Object(r.b)("inlineCode",{parentName:"a"},"KStream"))),Object(r.b)("p",null,"creates a new KStream instance from a given most.js\nstream; the consume topic will be empty and therefore\nno consumer will be build"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#kstream"}),Object(r.b)("inlineCode",{parentName:"a"},"KStream")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"most.js"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"Object")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"stream")))),Object(r.b)("h3",{id:"kstreamclonecloneevents-clonedeep-\u21d2-kstream"},"kStream.clone(cloneEvents, cloneDeep) \u21d2 ",Object(r.b)("a",Object(n.a)({parentName:"h3"},{href:"#kstream"}),Object(r.b)("inlineCode",{parentName:"a"},"KStream"))),Object(r.b)("p",null,"as only joins and window operations return new stream instances\nyou might need a clone sometimes, which can be accomplished\nusing this function"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#kstream"}),Object(r.b)("inlineCode",{parentName:"a"},"KStream")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Default"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"cloneEvents"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"boolean")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"false")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"if events in the stream should be cloned")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"cloneDeep"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"boolean")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"false")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"if events in the stream should be cloned deeply")))),Object(r.b)("h3",{id:"kstreambranchpreds-\u21d2-arrayltkstreamgt"},"kStream.branch(preds) \u21d2 ",Object(r.b)("a",Object(n.a)({parentName:"h3"},{href:"#kstream"}),Object(r.b)("inlineCode",{parentName:"a"},"Array.&lt;KStream&gt;"))),Object(r.b)("p",null,'Splits a stream into multiple branches based on cloning\nand filtering it depending on the passed predicates.\n[ (message) => message.key.startsWith("A"),\n(message) => message.key.startsWith("B"),'),Object(r.b)("h2",{id:"message--true-"},"(message) => true ]"),Object(r.b)("p",null,"[ streamA, streamB, streamTrue ]"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#kstream"}),Object(r.b)("inlineCode",{parentName:"a"},"KStream")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"preds"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"Array.&lt;function()&gt;"))))),Object(r.b)("h3",{id:"kstreamwindowfrom-to-etl-encapsulated-collect-\u21d2-object"},"kStream.window(from, to, etl, encapsulated, collect) \u21d2 ",Object(r.b)("inlineCode",{parentName:"h3"},"Object")),Object(r.b)("p",null,'builds a window\'ed stream across all events of the current kstream\nwhen the first event with an exceeding "to" is received (or the abort()\ncallback is called) the window closes and emits its "collected" values to the\nreturned kstream\nfrom and to must be unix epoch timestamps in milliseconds (Date.now())\netl can be a function that should return the timestamp (event time) of\nfrom within the message e.g. m -> m.payload.createdAt\nif etl is not given, a timestamp of receiving will be used (processing time)\nfor each event\nencapsulated refers to the result messages (defaults to true, they will be\nencapsulated in an object: {time, value}'),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#kstream"}),Object(r.b)("inlineCode",{parentName:"a"},"KStream")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Default"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"from"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"number")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null})),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"to"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"number")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null})),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"etl"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"function")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null})),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"encapsulated"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"boolean")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"true")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"if event should stay encapsulated {time, value}")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"collect"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"boolean")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"true")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"if events should be collected first before publishing to result stream")))),Object(r.b)("h3",{id:"kstreamclose-\u21d2-promiseltbooleangt"},"kStream.close() \u21d2 ",Object(r.b)("inlineCode",{parentName:"h3"},"Promise.&lt;boolean&gt;")),Object(r.b)("p",null,"closes the internal stream\nand all kafka open connections\nas well as KStorage connections"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#kstream"}),Object(r.b)("inlineCode",{parentName:"a"},"KStream"))),Object(r.b)("h2",{id:"ktable"},"KTable"),Object(r.b)("p",null,"table representation of a stream"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": global class  "),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#ktable"}),"KTable"),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#new_ktable_new"}),"new KTable(topicName, keyMapETL, storage, kafka, isClone)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#ktable+start"}),".start(kafkaReadyCallback, kafkaErrorCallback, withBackPressure, outputKafkaConfig)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#ktable+innerjoinstream-key"}),".innerJoin(stream, key)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#ktable+outerjoinstream"}),".outerJoin(stream)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#ktableleftjoinstream"}),".leftJoin(stream)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#ktable+writetotablestream"}),".writeToTableStream(message)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#ktable+consumeuntilms"}),".consumeUntilMs(ms, finishedCallback)")," \u21d2 ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#ktable"}),Object(r.b)("inlineCode",{parentName:"a"},"KTable"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#ktable+consumeuntilcount"}),".consumeUntilCount(count, finishedCallback)")," \u21d2 ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#ktable"}),Object(r.b)("inlineCode",{parentName:"a"},"KTable"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#ktable+consumeuntillatestoffset"}),".consumeUntilLatestOffset(finishedCallback)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#ktable+gettable"}),".getTable()")," \u21d2 ",Object(r.b)("inlineCode",{parentName:"li"},"Promise.&lt;object&gt;")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#ktable+replay"}),".replay()")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#ktable+merge"}),".merge(stream)")," \u21d2 ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#ktable"}),Object(r.b)("inlineCode",{parentName:"a"},"Promise.&lt;KTable&gt;"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#ktable+clone"}),".clone()")," \u21d2 ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#ktable"}),Object(r.b)("inlineCode",{parentName:"a"},"Promise.&lt;KTable&gt;"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#ktable+close"}),".close()")," \u21d2 ",Object(r.b)("inlineCode",{parentName:"li"},"Promise.&lt;boolean&gt;"))))),Object(r.b)("h3",{id:"new-ktabletopicname-keymapetl-storage-kafka-isclone"},"new KTable(topicName, keyMapETL, storage, kafka, isClone)"),Object(r.b)("p",null,"creates a table representation of a stream\njoin operations of ktable instances are asynchronous\nand return promises\nkeyMapETL = v -> {key, value} (sync)"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Default"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"topicName"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"string")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"keyMapETL"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"function")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"storage"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"KStorage")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"kafka"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"KafkaClient")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"isClone"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"boolean")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"false"))))),Object(r.b)("h3",{id:"ktablestartkafkareadycallback-kafkaerrorcallback-withbackpressure-outputkafkaconfig"},"kTable.start(kafkaReadyCallback, kafkaErrorCallback, withBackPressure, outputKafkaConfig)"),Object(r.b)("p",null,"start kafka consumption\nprepare production of messages if necessary\nwhen called with zero or just a single callback argument\nthis function will return a promise and use the callback for errors"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#ktable"}),Object(r.b)("inlineCode",{parentName:"a"},"KTable")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Default"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"kafkaReadyCallback"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"function")," ","|"," ",Object(r.b)("inlineCode",{parentName:"td"},"Object")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null})),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"can also be an object (config)")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"kafkaErrorCallback"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"function")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null})),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"withBackPressure"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"boolean")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"false")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"outputKafkaConfig"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"Object")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null})),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}))))),Object(r.b)("h3",{id:"ktableinnerjoinstream-key"},"kTable.innerJoin(stream, key)"),Object(r.b)("p",null,"Emits an output when both input sources have records with the same key."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#ktable"}),Object(r.b)("inlineCode",{parentName:"a"},"KTable")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Default"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"stream"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"key"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"string")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"&quot;key&quot;"))))),Object(r.b)("h3",{id:"ktableouterjoinstream"},"kTable.outerJoin(stream)"),Object(r.b)("p",null,"Emits an output for each record in either input source.\nIf only one source contains a key, the other is null"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#ktable"}),Object(r.b)("inlineCode",{parentName:"a"},"KTable")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"stream"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL")))))),Object(r.b)("h3",{id:"ktableleftjoinstream"},"kTable.leftJoin(stream)"),Object(r.b)("p",null,"Emits an output for each record in the left or primary input source.\nIf the other source does not have a value for a given key, it is set to null"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#ktable"}),Object(r.b)("inlineCode",{parentName:"a"},"KTable")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"stream"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL")))))),Object(r.b)("h3",{id:"ktablewritetotablestreammessage"},"kTable.writeToTableStream(message)"),Object(r.b)("p",null,"write message to the internal stream"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#ktable"}),Object(r.b)("inlineCode",{parentName:"a"},"KTable")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"message"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"any"))))),Object(r.b)("h3",{id:"ktableconsumeuntilmsms-finishedcallback-\u21d2-ktable"},"kTable.consumeUntilMs(ms, finishedCallback) \u21d2 ",Object(r.b)("a",Object(n.a)({parentName:"h3"},{href:"#ktable"}),Object(r.b)("inlineCode",{parentName:"a"},"KTable"))),Object(r.b)("p",null,"consume messages until ms passed"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#ktable"}),Object(r.b)("inlineCode",{parentName:"a"},"KTable")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Default"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ms"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"number")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"1000"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"finishedCallback"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"function")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}))))),Object(r.b)("h3",{id:"ktableconsumeuntilcountcount-finishedcallback-\u21d2-ktable"},"kTable.consumeUntilCount(count, finishedCallback) \u21d2 ",Object(r.b)("a",Object(n.a)({parentName:"h3"},{href:"#ktable"}),Object(r.b)("inlineCode",{parentName:"a"},"KTable"))),Object(r.b)("p",null,"consume messages until a certain count is reached"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#ktable"}),Object(r.b)("inlineCode",{parentName:"a"},"KTable")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Default"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"count"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"number")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"1000"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"finishedCallback"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"function")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}))))),Object(r.b)("h3",{id:"ktableconsumeuntillatestoffsetfinishedcallback"},"kTable.consumeUntilLatestOffset(finishedCallback)"),Object(r.b)("p",null,"consume messages until latest offset of topic"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#ktable"}),Object(r.b)("inlineCode",{parentName:"a"},"KTable")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Default"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"finishedCallback"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"function")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}))))),Object(r.b)("h3",{id:"ktablegettable-\u21d2-promiseltobjectgt"},"kTable.getTable() \u21d2 ",Object(r.b)("inlineCode",{parentName:"h3"},"Promise.&lt;object&gt;")),Object(r.b)("p",null,"returns the state of the internal KStorage"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#ktable"}),Object(r.b)("inlineCode",{parentName:"a"},"KTable"))),Object(r.b)("h3",{id:"ktablereplay"},"kTable.replay()"),Object(r.b)("p",null,"rewrites content of internal KStorage\nto the stream, every observer will receive\nthe content as KV {key, value} object"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#ktable"}),Object(r.b)("inlineCode",{parentName:"a"},"KTable"))),Object(r.b)("h3",{id:"ktablemergestream-\u21d2-promiseltktablegt"},"kTable.merge(stream) \u21d2 ",Object(r.b)("a",Object(n.a)({parentName:"h3"},{href:"#ktable"}),Object(r.b)("inlineCode",{parentName:"a"},"Promise.&lt;KTable&gt;"))),Object(r.b)("p",null,"Emits an output for each record in any of the streams.\nActs as simple merge of both streams.\ncan be used with KStream or KTable instances\nreturns a Promise with a NEW KTable instance"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#ktable"}),Object(r.b)("inlineCode",{parentName:"a"},"KTable")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"stream"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL")))))),Object(r.b)("h3",{id:"ktableclone-\u21d2-promiseltktablegt"},"kTable.clone() \u21d2 ",Object(r.b)("a",Object(n.a)({parentName:"h3"},{href:"#ktable"}),Object(r.b)("inlineCode",{parentName:"a"},"Promise.&lt;KTable&gt;"))),Object(r.b)("p",null,"as only joins and window operations return new stream instances\nyou might need a clone sometimes, which can be accomplished\nusing this function"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#ktable"}),Object(r.b)("inlineCode",{parentName:"a"},"KTable"))),Object(r.b)("h3",{id:"ktableclose-\u21d2-promiseltbooleangt"},"kTable.close() \u21d2 ",Object(r.b)("inlineCode",{parentName:"h3"},"Promise.&lt;boolean&gt;")),Object(r.b)("p",null,"closes the internal stream\nand all kafka open connections\nas well as KStorage connections"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#ktable"}),Object(r.b)("inlineCode",{parentName:"a"},"KTable"))),Object(r.b)("h2",{id:"streamdsl"},"StreamDSL"),Object(r.b)("p",null,"Stream base class"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": global class  "),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#summary"}),"Summary")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#keycount"}),"KeyCount")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#laststate"}),"LastState")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#max"}),"Max")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#min"}),"Min")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#sum"}),"Sum")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#window"}),"Window")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#jskafkaclient"}),"JSKafkaClient"),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#new-jskafkaclienttopic-config"}),"new JSKafkaClient(topic, config)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#jskafkaclientsetproducehandlerhandler"}),"jsKafkaClient.setProduceHandler(handler)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#jskafkaclientgetproducehandler--null--eventemitter"}),"jsKafkaClient.getProduceHandler() \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"null")," | ",Object(r.b)("inlineCode",{parentName:"a"},"EventEmitter"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#jskafkaclientoverwritetopicstopics"}),"jsKafkaClient.overwriteTopics(topics)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#jskafkaclientstartreadycallback-kafkaerrorcallback-withproducer-withbackpressure"}),"jsKafkaClient.start(readyCallback, kafkaErrorCallback, withProducer, withBackPressure)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#jskafkaclientsetupproducerproducetopic-partitions-readycallback-kafkaerrorcallback-outputkafkaconfig"}),"jsKafkaClient.setupProducer(produceTopic, partitions, readyCallback, kafkaErrorCallback, outputKafkaConfig)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#jskafkaclientsendtopic-message--"}),"jsKafkaClient.send(topic, message) \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"*"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#jskafkaclientbuffertopic-identifier-payload-compressiontype--"}),"jsKafkaClient.buffer(topic, identifier, payload, compressionType) \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"*"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#jskafkaclientbufferformattopic-identifier-payload-version-compressiontype--"}),"jsKafkaClient.bufferFormat(topic, identifier, payload, version, compressionType) \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"*"))))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#nativekafkaclient"}),"NativeKafkaClient"),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#new-nativekafkaclienttopic-config-batchoptions"}),"new NativeKafkaClient(topic, config, batchOptions)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#nativekafkaclientsetproducehandlerhandler"}),"nativeKafkaClient.setProduceHandler(handler)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#nativekafkaclientgetproducehandler--null--eventemitter"}),"nativeKafkaClient.getProduceHandler() \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"null")," ","|"," ",Object(r.b)("inlineCode",{parentName:"a"},"EventEmitter"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#nativekafkaclientoverwritetopicstopics"}),"nativeKafkaClient.overwriteTopics(topics)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#nativekafkaclientstartreadycallback-kafkaerrorcallback-withproducer-withbackpressure"}),"nativeKafkaClient.start(readyCallback, kafkaErrorCallback, withProducer, withBackPressure)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#nativekafkaclientsetupproducerproducetopic-partitions-readycallback-kafkaerrorcallback-outputkafkaconfig"}),"nativeKafkaClient.setupProducer(produceTopic, partitions, readyCallback, kafkaErrorCallback, outputKafkaConfig)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#nativekafkaclientsendtopicname-message-partition-key-partitionkey-opaquekey--promiseltvoidgt"}),"nativeKafkaClient.send(topicName, message, partition, key, partitionKey, opaqueKey) \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"Promise.&lt;void&gt;"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#nativekafkaclientbuffertopic-identifier-payload-_-partition-version-partitionkey--promiseltvoidgt"}),"nativeKafkaClient.buffer(topic, identifier, payload, _, partition, version, partitionKey) \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"Promise.&lt;void&gt;"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#nativekafkaclientbufferformattopic-identifier-payload-version-_-partitionkey-partition--promiseltvoidgt"}),"nativeKafkaClient.bufferFormat(topic, identifier, payload, version, _, partitionKey, partition) \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"Promise.&lt;void&gt;"))))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#kstream"}),"KStream"),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#new-kstreamtopicname-storage-kafka-isclone"}),"new KStream(topicName, storage, kafka, isClone)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#kstreamstartkafkareadycallback-kafkaerrorcallback-withbackpressure-outputkafkaconfig"}),"kStream.start(kafkaReadyCallback, kafkaErrorCallback, withBackPressure, outputKafkaConfig)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#kstreaminnerjoinstream-key-windowed-combine--kstream"}),"kStream.innerJoin(stream, key, windowed, combine) \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"KStream"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#kstreamouterjoinstream"}),"kStream.outerJoin(stream)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#kstreamleftjoinstream"}),"kStream.leftJoin(stream)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#kstreammergestream--kstream"}),"kStream.merge(stream) \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"KStream"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#kstreamfrommost--kstream"}),"kStream.fromMost() \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"KStream"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#kstreamclonecloneevents-clonedeep--kstream"}),"kStream.clone(cloneEvents, cloneDeep) \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"KStream"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#kstreambranchpreds--arrayltkstreamgt"}),"kStream.branch(preds) \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"Array.&lt;KStream&gt;"))))),Object(r.b)("li",{parentName:"ul"},"[(message) => true ]","](#message--true-)",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#kstreamwindowfrom-to-etl-encapsulated-collect--object"}),"kStream.window(from, to, etl, encapsulated, collect) \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"Object"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#kstreamclose--promiseltbooleangt"}),"kStream.close() \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"Promise.&lt;boolean&gt;"))))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#ktable"}),"KTable"),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#new-ktabletopicname-keymapetl-storage-kafka-isclone"}),"new KTable(topicName, keyMapETL, storage, kafka, isClone)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#ktablestartkafkareadycallback-kafkaerrorcallback-withbackpressure-outputkafkaconfig"}),"kTable.start(kafkaReadyCallback, kafkaErrorCallback, withBackPressure, outputKafkaConfig)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#ktableinnerjoinstream-key"}),"kTable.innerJoin(stream, key)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#ktableouterjoinstream"}),"kTable.outerJoin(stream)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#ktableleftjoinstream"}),"kTable.leftJoin(stream)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#ktablewritetotablestreammessage"}),"kTable.writeToTableStream(message)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#ktableconsumeuntilmsms-finishedcallback--ktable"}),"kTable.consumeUntilMs(ms, finishedCallback) \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"KTable"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#ktableconsumeuntilcountcount-finishedcallback--ktable"}),"kTable.consumeUntilCount(count, finishedCallback) \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"KTable"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#ktableconsumeuntillatestoffsetfinishedcallback"}),"kTable.consumeUntilLatestOffset(finishedCallback)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#ktablegettable--promiseltobjectgt"}),"kTable.getTable() \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"Promise.&lt;object&gt;"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#ktablereplay"}),"kTable.replay()")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#ktablemergestream--promiseltktablegt"}),"kTable.merge(stream) \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"Promise.&lt;KTable&gt;"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#ktableclone--promiseltktablegt"}),"kTable.clone() \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"Promise.&lt;KTable&gt;"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#ktableclose--promiseltbooleangt"}),"kTable.close() \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"Promise.&lt;boolean&gt;"))))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#streamdsl"}),"StreamDSL"),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#new-streamdsltopicname-storage-kafka-isclone"}),"new StreamDSL(topicName, storage, kafka, isClone)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#streamdslstart"}),"streamDSL.start()")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#streamdslgetstats--object"}),"streamDSL.getStats() \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"object"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#streamdslgetstorage--kstorage"}),"streamDSL.getStorage() \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"KStorage"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#streamdslwritetostreammessage"}),"streamDSL.writeToStream(message)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#streamdslgetmost--object"}),"streamDSL.getMost() \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"Object"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#streamdslgetnewmostfromarray--streamltanygt"}),"streamDSL.getNewMostFrom(array) \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"Stream.&lt;any&gt;"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#streamdslreplaceinternalobservablenewstream"}),"streamDSL.replaceInternalObservable(newStream$)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#streamdslsetproducehandlerhandler"}),"streamDSL.setProduceHandler(handler)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#streamdslcreateandsetproducehandler--moduleeventsinternal"}),"streamDSL.createAndSetProduceHandler() \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"module:events.internal"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#streamdslsetkafkastreamsreferencereference"}),"streamDSL.setKafkaStreamsReference(reference)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#streamdslfromtopicname--streamdsl"}),"streamDSL.from(topicName) \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#streamdslawaitpromisesetl--streamdsl"}),"streamDSL.awaitPromises(etl) \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#streamdslmapetl--streamdsl"}),"streamDSL.map(etl) \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#streamdslasyncmapetl--streamdsl"}),"streamDSL.asyncMap(etl) \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#streamdslconcatmapetl--streamdsl"}),"streamDSL.concatMap(etl) \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#streamdslforeacheff--"}),"streamDSL.forEach(eff) \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"\\*"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#streamdslchainforeacheff-callback--streamdsl"}),"streamDSL.chainForEach(eff, callback) \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#streamdsltapeff"}),"streamDSL.tap(eff)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#streamdslfilterpred--streamdsl"}),"streamDSL.filter(pred) \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#streamdslskiprepeats--streamdsl"}),"streamDSL.skipRepeats() \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#streamdslskiprepeatswithequals--streamdsl"}),"streamDSL.skipRepeatsWith(equals) \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#streamdslskipcount--streamdsl"}),"streamDSL.skip(count) \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#streamdsltakecount--streamdsl"}),"streamDSL.take(count) \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#streamdslmapstringtoarraydelimiter--streamdsl"}),"streamDSL.mapStringToArray(delimiter) \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#streamdslmaparraytokvkeyindex-valueindex--streamdsl"}),"streamDSL.mapArrayToKV(keyIndex, valueIndex) \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#streamdslmapstringtokvdelimiter-keyindex-valueindex--streamdsl"}),"streamDSL.mapStringToKV(delimiter, keyIndex, valueIndex) \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#streamdslmapjsonparse--streamdsl"}),"streamDSL.mapJSONParse() \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#streamdslmapstringify--streamdsl"}),"streamDSL.mapStringify() \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#streamdslmapbufferkeytostring--streamdsl"}),"streamDSL.mapBufferKeyToString() \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#streamdslmapbuffervaluetostring--streamdsl"}),"streamDSL.mapBufferValueToString() \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#streamdslmapstringvaluetojsonobject--streamdsl"}),"streamDSL.mapStringValueToJSONObject() \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#streamdslmapjsonconvenience--streamdsl"}),"streamDSL.mapJSONConvenience() \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#streamdslwrapaskafkavaluetopic--streamdsl"}),"streamDSL.wrapAsKafkaValue(topic) \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#streamdslmapwrapkafkavalue--streamdsl"}),"streamDSL.mapWrapKafkaValue() \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#streamdslatthroughputcount-callback--streamdsl"}),"streamDSL.atThroughput(count, callback) \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#streamdslmaptoformattype-getid--streamdsl"}),"streamDSL.mapToFormat(type, getId) \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#streamdslmapfromformat--streamdsl"}),"streamDSL.mapFromFormat() \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#streamdsltimestampetl--streamdsl"}),"streamDSL.timestamp(etl) \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#streamdslconstantsubstitute--streamdsl"}),"streamDSL.constant(substitute) \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#streamdslscaneff-initial--streamdsl"}),"streamDSL.scan(eff, initial) \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#streamdslslicestart-end--streamdsl"}),"streamDSL.slice(start, end) \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#streamdsltakewhilepred--streamdsl"}),"streamDSL.takeWhile(pred) \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#streamdslskipwhilepred--streamdsl"}),"streamDSL.skipWhile(pred) \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#streamdsluntilsignal--streamdsl"}),"streamDSL.until(signal$) \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#streamdslsincesignal--streamdsl"}),"streamDSL.since(signal$) \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#streamdslcontinuewithf"}),"streamDSL.continueWith(f)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#streamdslreduceeff-initial--"}),"streamDSL.reduce(eff, initial) \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"\\*"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#streamdslchainreduceeff-initial-callback--streamdsl"}),"streamDSL.chainReduce(eff, initial, callback) \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#streamdsldrain--"}),"streamDSL.drain() \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"\\*"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#streamdslthrottlethrottleperiod--streamdsl"}),"streamDSL.throttle(throttlePeriod) \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#streamdsldelaydelaytime--streamdsl"}),"streamDSL.delay(delayTime) \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#streamdsldebouncedebouncetime--streamdsl"}),"streamDSL.debounce(debounceTime) \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#streamdslcountbykeykey-countfieldname--streamdsl"}),"streamDSL.countByKey(key, countFieldName) \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#streamdslsumbykeykey-fieldname-sumfield--streamdsl"}),"streamDSL.sumByKey(key, fieldName, sumField) \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#streamdslminfieldname-minfield--streamdsl"}),"streamDSL.min(fieldName, minField) \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#streamdslmaxfieldname-maxfield--streamdsl"}),"streamDSL.max(fieldName, maxField) \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#streamdsl_mergeotherstream"}),"streamDSL.","_","merge(otherStream$)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#streamdsl_zipotherstream-combine"}),"streamDSL.","_","zip(otherStream$, combine)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#streamdsltotopic-outputpartitionscount-producetype-version-compressiontype-producererrorcallback-outputkafkaconfig--promiseltbooleangt"}),"streamDSL.to(topic, outputPartitionsCount, produceType, version, compressionType, producerErrorCallback, outputKafkaConfig) \u21d2 ",Object(r.b)("inlineCode",{parentName:"a"},"Promise.&lt;boolean&gt;")))))),Object(r.b)("h3",{id:"new-streamdsltopicname-storage-kafka-isclone"},"new StreamDSL(topicName, storage, kafka, isClone)"),Object(r.b)("p",null,"Stream base class that wraps around a private most.js stream$\nand interacts with storages/actions and a kafka-client instance."),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Default"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"topicName"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"string")," ","|"," ",Object(r.b)("inlineCode",{parentName:"td"},"Array.&lt;string&gt;")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null})),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"can also be topics")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"storage"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"KStorage")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null})),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"kafka"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"KafkaClient")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null})),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"isClone"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"boolean")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"false")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}))))),Object(r.b)("h3",{id:"streamdslstart"},"streamDSL.start()"),Object(r.b)("p",null,"dummy, should be overwritten"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("h3",{id:"streamdslgetstats-\u21d2-object"},"streamDSL.getStats() \u21d2 ",Object(r.b)("inlineCode",{parentName:"h3"},"object")),Object(r.b)("p",null,"returns a stats object with information\nabout the internal kafka clients"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("h3",{id:"streamdslgetstorage-\u21d2-kstorage"},"streamDSL.getStorage() \u21d2 ",Object(r.b)("inlineCode",{parentName:"h3"},"KStorage")),Object(r.b)("p",null,"returns the internal KStorage instance"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("h3",{id:"streamdslwritetostreammessage"},"streamDSL.writeToStream(message)"),Object(r.b)("p",null,"can be used to manually write message/events\nto the internal stream$"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"message"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"Object")," ","|"," ",Object(r.b)("inlineCode",{parentName:"td"},"Array.&lt;Object&gt;"))))),Object(r.b)("h3",{id:"streamdslgetmost-\u21d2-object"},"streamDSL.getMost() \u21d2 ",Object(r.b)("inlineCode",{parentName:"h3"},"Object")),Object(r.b)("p",null,"returns the internal most.js stream"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL")),Object(r.b)("br",{parentName:"p"}),"\n",Object(r.b)("strong",{parentName:"p"},"Returns"),": ",Object(r.b)("inlineCode",{parentName:"p"},"Object")," - most.js stream"),Object(r.b)("h3",{id:"streamdslgetnewmostfromarray-\u21d2-streamltanygt"},"streamDSL.getNewMostFrom(array) \u21d2 ",Object(r.b)("inlineCode",{parentName:"h3"},"Stream.&lt;any&gt;")),Object(r.b)("p",null,"returns a new most stream from the\ngiven array"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"array")))),Object(r.b)("h3",{id:"streamdslreplaceinternalobservablenewstream"},"streamDSL.replaceInternalObservable(newStream$)"),Object(r.b)("p",null,"used to clone or during merges\nresets the internal event emitter to the new stream\nand replaces the internal stream with the merged new stream"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"newStream$")))),Object(r.b)("h3",{id:"streamdslsetproducehandlerhandler"},"streamDSL.setProduceHandler(handler)"),Object(r.b)("p",null,"sets a handler for produce messages\n(emits whenever kafka messages are produced/delivered)\nevents: produced, delivered"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"handler"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"module:events.internal"))))),Object(r.b)("h3",{id:"streamdslcreateandsetproducehandler-\u21d2-moduleeventsinternal"},"streamDSL.createAndSetProduceHandler() \u21d2 ",Object(r.b)("inlineCode",{parentName:"h3"},"module:events.internal")),Object(r.b)("p",null,"creates (and returns) and sets a produce handler\nfor this stream instance"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("h3",{id:"streamdslsetkafkastreamsreferencereference"},"streamDSL.setKafkaStreamsReference(reference)"),Object(r.b)("p",null,"overwrites the internal kafkaStreams reference"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"reference")))),Object(r.b)("h3",{id:"streamdslfromtopicname-\u21d2-streamdsl"},"streamDSL.from(topicName) \u21d2 ",Object(r.b)("a",Object(n.a)({parentName:"h3"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("p",null,"add more topic/s to the consumer"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"topicName"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"string")," ","|"," ",Object(r.b)("inlineCode",{parentName:"td"},"Array.&lt;string&gt;"))))),Object(r.b)("h3",{id:"streamdslawaitpromisesetl-\u21d2-streamdsl"},"streamDSL.awaitPromises(etl) \u21d2 ",Object(r.b)("a",Object(n.a)({parentName:"h3"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("p",null,"given a stream of promises, returns stream containing the fulfillment values\netl = Promise -> v"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"etl")))),Object(r.b)("h3",{id:"streamdslmapetl-\u21d2-streamdsl"},"streamDSL.map(etl) \u21d2 ",Object(r.b)("a",Object(n.a)({parentName:"h3"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("p",null,"simple synchronous map function\netl = v -> v2"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"etl")))),Object(r.b)("h3",{id:"streamdslasyncmapetl-\u21d2-streamdsl"},"streamDSL.asyncMap(etl) \u21d2 ",Object(r.b)("a",Object(n.a)({parentName:"h3"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("p",null,"map that expects etl to return a Promise\ncan be used to apply async maps to stream\netl = v -> Promise"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"etl")))),Object(r.b)("h3",{id:"streamdslconcatmapetl-\u21d2-streamdsl"},"streamDSL.concatMap(etl) \u21d2 ",Object(r.b)("a",Object(n.a)({parentName:"h3"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("p",null,"transform each etl in stream into a stream,\nand then concatenate it onto the end of the resulting stream.\netl = v -> stream(v2)"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"etl")))),Object(r.b)("h3",{id:"streamdslforeacheff-\u21d2-"},"streamDSL.forEach(eff) \u21d2 ",Object(r.b)("inlineCode",{parentName:"h3"},"\\*")),Object(r.b)("p",null,"(do not use for side effects,\nexcept for a closing operation at the end of the stream)\nmay not be used to chain\neff = v -> void"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL")),Object(r.b)("br",{parentName:"p"}),"\n",Object(r.b)("strong",{parentName:"p"},"Returns"),": ",Object(r.b)("inlineCode",{parentName:"p"},"\\*")," - Promise  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"eff")))),Object(r.b)("h3",{id:"streamdslchainforeacheff-callback-\u21d2-streamdsl"},"streamDSL.chainForEach(eff, callback) \u21d2 ",Object(r.b)("a",Object(n.a)({parentName:"h3"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("p",null,"runs forEach on a multicast stream\nyou probably would not want to use this in production"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Default"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"eff"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"callback"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}))))),Object(r.b)("h3",{id:"streamdsltapeff"},"streamDSL.tap(eff)"),Object(r.b)("p",null,"(alternative to forEach if in the middle of a\nstream operation chain)\nuse this for side-effects\nerrors in eff will break stream"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"eff")))),Object(r.b)("h3",{id:"streamdslfilterpred-\u21d2-streamdsl"},"streamDSL.filter(pred) \u21d2 ",Object(r.b)("a",Object(n.a)({parentName:"h3"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("p",null,"stream contains only events for which predicate\nreturns true\npred = v -> boolean"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"pred")))),Object(r.b)("h3",{id:"streamdslskiprepeats-\u21d2-streamdsl"},"streamDSL.skipRepeats() \u21d2 ",Object(r.b)("a",Object(n.a)({parentName:"h3"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("p",null,"will remove duplicate messages\nbe aware that this might take a lot of memory"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("h3",{id:"streamdslskiprepeatswithequals-\u21d2-streamdsl"},"streamDSL.skipRepeatsWith(equals) \u21d2 ",Object(r.b)("a",Object(n.a)({parentName:"h3"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("p",null,"skips repeats per your definition\nequals = (a,b) -> boolean"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"equals")))),Object(r.b)("h3",{id:"streamdslskipcount-\u21d2-streamdsl"},"streamDSL.skip(count) \u21d2 ",Object(r.b)("a",Object(n.a)({parentName:"h3"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("p",null,"skips the amount of messages"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"count")))),Object(r.b)("h3",{id:"streamdsltakecount-\u21d2-streamdsl"},"streamDSL.take(count) \u21d2 ",Object(r.b)("a",Object(n.a)({parentName:"h3"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("p",null,"takes the first messages until count\nand omits the rest"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"count")))),Object(r.b)("h3",{id:"streamdslmapstringtoarraydelimiter-\u21d2-streamdsl"},"streamDSL.mapStringToArray(delimiter) \u21d2 ",Object(r.b)("a",Object(n.a)({parentName:"h3"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("p",null,'easy string to array mapping\nyou can pass your delimiter\ndefault is space\n"bla blup" => ','["bla", "blup"]'),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Default"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"delimiter"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"}," "))))),Object(r.b)("h3",{id:"streamdslmaparraytokvkeyindex-valueindex-\u21d2-streamdsl"},"streamDSL.mapArrayToKV(keyIndex, valueIndex) \u21d2 ",Object(r.b)("a",Object(n.a)({parentName:"h3"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("p",null,"easy array to key-value object mapping\nyou can pass your own indices\ndefault is 0,1\n",'["bla", "blup"]',' => { key: "bla", value: "blup" }'),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Default"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"keyIndex"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"0"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"valueIndex"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"1"))))),Object(r.b)("h3",{id:"streamdslmapstringtokvdelimiter-keyindex-valueindex-\u21d2-streamdsl"},"streamDSL.mapStringToKV(delimiter, keyIndex, valueIndex) \u21d2 ",Object(r.b)("a",Object(n.a)({parentName:"h3"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("p",null,'easy string to key-value object mapping\nyou can pass your own delimiter and indices\ndefault is " " and 0,1\n"bla blup" => { key: "bla", value: "blup" }'),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Default"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"delimiter"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"}," "))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"keyIndex"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"0"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"valueIndex"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"1"))))),Object(r.b)("h3",{id:"streamdslmapjsonparse-\u21d2-streamdsl"},"streamDSL.mapJSONParse() \u21d2 ",Object(r.b)("a",Object(n.a)({parentName:"h3"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("p",null,"maps every stream event through JSON.parse\nif its type is an object\n(if parsing fails, the error object will be returned)"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("h3",{id:"streamdslmapstringify-\u21d2-streamdsl"},"streamDSL.mapStringify() \u21d2 ",Object(r.b)("a",Object(n.a)({parentName:"h3"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("p",null,"maps every stream event through JSON.stringify\nif its type is object"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("h3",{id:"streamdslmapbufferkeytostring-\u21d2-streamdsl"},"streamDSL.mapBufferKeyToString() \u21d2 ",Object(r.b)("a",Object(n.a)({parentName:"h3"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("p",null,"maps an object type event with a Buffer key field\nto an object event with a string key field"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("h3",{id:"streamdslmapbuffervaluetostring-\u21d2-streamdsl"},"streamDSL.mapBufferValueToString() \u21d2 ",Object(r.b)("a",Object(n.a)({parentName:"h3"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("p",null,"maps an object type event with a Buffer value field\nto an object event with a string value field"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("h3",{id:"streamdslmapstringvaluetojsonobject-\u21d2-streamdsl"},"streamDSL.mapStringValueToJSONObject() \u21d2 ",Object(r.b)("a",Object(n.a)({parentName:"h3"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("p",null,"maps an object type event with a string value field\nto an object event with (parsed) object value field"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("h3",{id:"streamdslmapjsonconvenience-\u21d2-streamdsl"},"streamDSL.mapJSONConvenience() \u21d2 ",Object(r.b)("a",Object(n.a)({parentName:"h3"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("p",null,"takes a buffer kafka message\nand turns it into a json representation\nbuffer key -> string\nbuffer value -> string -> object"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("h3",{id:"streamdslwrapaskafkavaluetopic-\u21d2-streamdsl"},"streamDSL.wrapAsKafkaValue(topic) \u21d2 ",Object(r.b)("a",Object(n.a)({parentName:"h3"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("p",null,"wraps an event value inside a kafka message object\nthe event value will be used as value of the kafka message"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"topic"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"optional")))),Object(r.b)("h3",{id:"streamdslmapwrapkafkavalue-\u21d2-streamdsl"},"streamDSL.mapWrapKafkaValue() \u21d2 ",Object(r.b)("a",Object(n.a)({parentName:"h3"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("p",null,"maps every stream event's kafka message\nright to its payload value"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("h3",{id:"streamdslatthroughputcount-callback-\u21d2-streamdsl"},"streamDSL.atThroughput(count, callback) \u21d2 ",Object(r.b)("a",Object(n.a)({parentName:"h3"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("p",null,"taps to the stream\ncounts messages and returns\ncallback once (when message count is reached)\nwith the current message at count"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Default"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"count"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"number")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"1"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"callback"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"function")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}))))),Object(r.b)("h3",{id:"streamdslmaptoformattype-getid-\u21d2-streamdsl"},"streamDSL.mapToFormat(type, getId) \u21d2 ",Object(r.b)("a",Object(n.a)({parentName:"h3"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"default kafka format stringify\n{} -> {payload, time, type, id}\ngetId can be a function to read the id from the message\ne.g. getId = message -> message.id")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Default"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"type"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"unknown-publish"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"getId"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}))))),Object(r.b)("h3",{id:"streamdslmapfromformat-\u21d2-streamdsl"},"streamDSL.mapFromFormat() \u21d2 ",Object(r.b)("a",Object(n.a)({parentName:"h3"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("p",null,'default kafka format parser\n{value: "{ payload: {} }" -> {}'),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("h3",{id:"streamdsltimestampetl-\u21d2-streamdsl"},"streamDSL.timestamp(etl) \u21d2 ",Object(r.b)("a",Object(n.a)({parentName:"h3"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("p",null,"maps elements into {time, value} objects"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"etl")))),Object(r.b)("h3",{id:"streamdslconstantsubstitute-\u21d2-streamdsl"},"streamDSL.constant(substitute) \u21d2 ",Object(r.b)("a",Object(n.a)({parentName:"h3"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("p",null,"replace every element with the substitute value"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"substitute")))),Object(r.b)("h3",{id:"streamdslscaneff-initial-\u21d2-streamdsl"},"streamDSL.scan(eff, initial) \u21d2 ",Object(r.b)("a",Object(n.a)({parentName:"h3"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("p",null,"mapping to incrementally accumulated results,\nstarting with the provided initial value."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"eff")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"initial")))),Object(r.b)("h3",{id:"streamdslslicestart-end-\u21d2-streamdsl"},"streamDSL.slice(start, end) \u21d2 ",Object(r.b)("a",Object(n.a)({parentName:"h3"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("p",null,"slicing events from start ot end of index"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"start")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"end")))),Object(r.b)("h3",{id:"streamdsltakewhilepred-\u21d2-streamdsl"},"streamDSL.takeWhile(pred) \u21d2 ",Object(r.b)("a",Object(n.a)({parentName:"h3"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("p",null,"contain events until predicate\nreturns false\nm -> !!m"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"pred")))),Object(r.b)("h3",{id:"streamdslskipwhilepred-\u21d2-streamdsl"},"streamDSL.skipWhile(pred) \u21d2 ",Object(r.b)("a",Object(n.a)({parentName:"h3"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("p",null,"contain events after predicate\nreturns false"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"pred")))),Object(r.b)("h3",{id:"streamdsluntilsignal-\u21d2-streamdsl"},"streamDSL.until(signal$) \u21d2 ",Object(r.b)("a",Object(n.a)({parentName:"h3"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("p",null,"contain events until signal$ emits first event\nsignal$ must be a most stream instance"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"signal$")))),Object(r.b)("h3",{id:"streamdslsincesignal-\u21d2-streamdsl"},"streamDSL.since(signal$) \u21d2 ",Object(r.b)("a",Object(n.a)({parentName:"h3"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("p",null,"contain all events after signal$ emits first event\nsignal$ must be a most stream instance"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"signal$")))),Object(r.b)("h3",{id:"streamdslcontinuewithf"},"streamDSL.continueWith(f)"),Object(r.b)("p",null,"Replace the end signal with a new stream returned by f.\nNote that f must return a (most.js) stream."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"f"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"function (must return a most stream)")))),Object(r.b)("h3",{id:"streamdslreduceeff-initial-\u21d2-"},"streamDSL.reduce(eff, initial) \u21d2 ",Object(r.b)("inlineCode",{parentName:"h3"},"\\*")),Object(r.b)("p",null,"reduce a stream to a single result\nwill return a promise"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL")),Object(r.b)("br",{parentName:"p"}),"\n",Object(r.b)("strong",{parentName:"p"},"Returns"),": ",Object(r.b)("inlineCode",{parentName:"p"},"\\*")," - Promise  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"eff")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"initial")))),Object(r.b)("h3",{id:"streamdslchainreduceeff-initial-callback-\u21d2-streamdsl"},"streamDSL.chainReduce(eff, initial, callback) \u21d2 ",Object(r.b)("a",Object(n.a)({parentName:"h3"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("p",null,"runs reduce on a multicast stream\nyou probably would not want to use this in production"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"eff")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"initial")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"callback")))),Object(r.b)("h3",{id:"streamdsldrain-\u21d2-"},"streamDSL.drain() \u21d2 ",Object(r.b)("inlineCode",{parentName:"h3"},"\\*")),Object(r.b)("p",null,"drains the stream, equally to forEach\nwithout iterator, returns a promise"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL")),Object(r.b)("br",{parentName:"p"}),"\n",Object(r.b)("strong",{parentName:"p"},"Returns"),": ",Object(r.b)("inlineCode",{parentName:"p"},"\\*")," - Promise"),Object(r.b)("h3",{id:"streamdslthrottlethrottleperiod-\u21d2-streamdsl"},"streamDSL.throttle(throttlePeriod) \u21d2 ",Object(r.b)("a",Object(n.a)({parentName:"h3"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("p",null,"limits rate events at most one per throttlePeriod\nthrottlePeriod = index count omit"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"throttlePeriod")))),Object(r.b)("h3",{id:"streamdsldelaydelaytime-\u21d2-streamdsl"},"streamDSL.delay(delayTime) \u21d2 ",Object(r.b)("a",Object(n.a)({parentName:"h3"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("p",null,"delays every event in stream by given time"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"delayTime")))),Object(r.b)("h3",{id:"streamdsldebouncedebouncetime-\u21d2-streamdsl"},"streamDSL.debounce(debounceTime) \u21d2 ",Object(r.b)("a",Object(n.a)({parentName:"h3"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("p",null,"wait for a burst of events and emit\nonly the last event"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"debounceTime")))),Object(r.b)("h3",{id:"streamdslcountbykeykey-countfieldname-\u21d2-streamdsl"},"streamDSL.countByKey(key, countFieldName) \u21d2 ",Object(r.b)("a",Object(n.a)({parentName:"h3"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("p",null,"maps into counts per key\nrequires events to have a present key/value field"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Default"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"key"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"key"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"countFieldName"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"count"))))),Object(r.b)("h3",{id:"streamdslsumbykeykey-fieldname-sumfield-\u21d2-streamdsl"},"streamDSL.sumByKey(key, fieldName, sumField) \u21d2 ",Object(r.b)("a",Object(n.a)({parentName:"h3"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("p",null,"maps into sums per key\nrequires events to have a present key/value field"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Default"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"key"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"key"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"fieldName"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"value"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"sumField"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"false"))))),Object(r.b)("h3",{id:"streamdslminfieldname-minfield-\u21d2-streamdsl"},"streamDSL.min(fieldName, minField) \u21d2 ",Object(r.b)("a",Object(n.a)({parentName:"h3"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("p",null,"collects the smallest value\nof the given field, will not alter\nthe events in the stream\nuse .getStorage().getMin() to get the\nlatest value which is stored"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Default"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"fieldName"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"value"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"minField"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"min"))))),Object(r.b)("h3",{id:"streamdslmaxfieldname-maxfield-\u21d2-streamdsl"},"streamDSL.max(fieldName, maxField) \u21d2 ",Object(r.b)("a",Object(n.a)({parentName:"h3"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL"))),Object(r.b)("p",null,"collects the greatest value\nof the given field, will not alter\nthe events in the stream\nuse .getStorage().getMax() to get the\nlatest value which is stored"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Default"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"fieldName"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"value"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"maxField"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"max"))))),Object(r.b)("h3",{id:"streamdsl_mergeotherstream"},"streamDSL.","_","merge(otherStream$)"),Object(r.b)("p",null,"merge this stream with another, resulting a\nstream with all elements from both streams"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"otherStream$")))),Object(r.b)("h3",{id:"streamdsl_zipotherstream-combine"},"streamDSL.","_","zip(otherStream$, combine)"),Object(r.b)("p",null,"merge this stream with another stream\nby combining (zipping) every event from each stream\nto a single new event on the new stream\ncombine = (e1, e2) -> e1 + e2"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"otherStream$")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"combine")))),Object(r.b)("h3",{id:"streamdsltotopic-outputpartitionscount-producetype-version-compressiontype-producererrorcallback-outputkafkaconfig-\u21d2-promiseltbooleangt"},"streamDSL.to(topic, outputPartitionsCount, produceType, version, compressionType, producerErrorCallback, outputKafkaConfig) \u21d2 ",Object(r.b)("inlineCode",{parentName:"h3"},"Promise.&lt;boolean&gt;")),Object(r.b)("p",null,"define an output topic\nwhen passed to KafkaStreams this will trigger\nthe stream$ result to be produced to the given topic name\nif the instance is a clone, this function call will have to setup a kafka producer\nreturns a promise"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Kind"),": instance method of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#streamdsl"}),Object(r.b)("inlineCode",{parentName:"a"},"StreamDSL")),"  "),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Default"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"topic"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"string")," ","|"," ",Object(r.b)("inlineCode",{parentName:"td"},"Object")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null})),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"optional (can also be an object, containing the same parameters as fields)")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"outputPartitionsCount"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"number")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"1")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"optional")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"produceType"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"string")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"&quot;send&quot;")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"optional")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"version"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"number")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"1")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"optional")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"compressionType"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"number")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"0")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"optional")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"producerErrorCallback"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"function")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null})),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"optional")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"outputKafkaConfig"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"Object")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null})),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"optional")))))}j.isMDXComponent=!0},73:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return s}));var n=a(0),b=a.n(n);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,b=function(e,t){if(null==e)return{};var a,n,b={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(b[a]=e[a]);return b}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(b[a]=e[a])}return b}var m=b.a.createContext({}),j=function(e){var t=b.a.useContext(m),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},p=function(e){var t=j(e.components);return b.a.createElement(m.Provider,{value:t},e.children)},O={inlineCode:"code",wrapper:function(e){var t=e.children;return b.a.createElement(b.a.Fragment,{},t)}},d=b.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,l=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),p=j(a),d=n,s=p["".concat(l,".").concat(d)]||p[d]||O[d]||r;return a?b.a.createElement(s,c(c({ref:t},m),{},{components:a})):b.a.createElement(s,c({ref:t},m))}));function s(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,l=new Array(r);l[0]=d;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:n,l[1]=c;for(var m=2;m<r;m++)l[m]=a[m];return b.a.createElement.apply(null,l)}return b.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"}}]);